Issue: Unable to move the player token to the correct position based on the dice value.

Explanation:
In Pygame, every element on the screen has a position based on the screen's coordinate system.
 Similarly, player tokens also have a position on the Monopoly board. At the beginning of the game, the player tokens' position is set to the bottom-right corner of the board. When a player rolls the dice, we use the dice value and multiply it by a gap to set the token's x position so that it moves from its current position. When the token's x position is equal to or greater than the board's bottom-left position, we update the token's y position so that it can move from bottom to top based on the dice value. This process is repeated for the other corners of the board as well.

However, because the Monopoly board design is not pixel-perfect, and some property cards are not the same size, the player tokens' positions sometimes go wrong. I tried to solve this by adding if-else conditions to adjust the tokens' positions, but errors arose when the dice value was greater than the tokens' right/left/top/bottom corner of the board. The tokens could not switch the moving direction because of the hard-coded adjustment I tried to do, which prevented me from calculating the left/right tokens' moves and the remaining up/down moves for the token.

Solution:
One way to solve this issue is to design the board with exact same size property cards. However, this may take a lot of time, and some properties may still split into multiple lines or require a smaller font size, making it challenging to achieve pixel-perfect positioning.